Terminals unused in grammar

    RETURN


State 63 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block

    2 block: OBRA statement CBRA
    3      | OBRA CBRA

    4 statement: assigment
    5          | block
    6          | print
    7          | if
    8          | while
    9          | var_type SMCL

   10 relexpression: expression EQEQ
   11              | expression LESS
   12              | expression GRTR
   13              | expression

   14 expression: term PLUS
   15           | term MINUS
   16           | term OR
   17           | term DOT
   18           | term

   19 term: factor
   20     | factor MULT
   21     | factor DIV
   22     | factor AND

   23 factor: INT
   24       | STR
   25       | IDENT
   26       | PLUS factor
   27       | MINUS factor
   28       | NOT factor
   29       | SCAN OPAR CPAR
   30       | OPAR relexpression CPAR

   31 assigment: var_type IDENT EQUL relexpression

   32 print: PRNT OPAR relexpression CPAR

   33 if: IF OPAR relexpression CPAR statement else

   34 while: WHILE OPAR relexpression CPAR statement

   35 else: ELSE statement
   36     | %empty

   37 var_type: TYPE IDENT
   38         | COMMA IDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS (258) 14 26
    MINUS (259) 15 27
    MULT (260) 20
    DIV (261) 21
    EQUL (262) 31
    EQEQ (263) 10
    LESS (264) 11
    GRTR (265) 12
    NOT (266) 28
    AND (267) 22
    OR (268) 16
    OPAR (269) 29 30 32 33 34
    CPAR (270) 29 30 32 33 34
    OBRA (271) 2 3
    CBRA (272) 2 3
    SMCL (273) 9
    PRNT (274) 32
    SCAN (275) 29
    WHILE (276) 34
    IF (277) 33
    ELSE (278) 35
    TYPE (279) 37
    DOT (280) 17
    RETURN (281)
    COMMA (282) 38
    INT (283) 23
    STR (284) 24
    IDENT (285) 25 31 37 38


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    block (33)
        on left: 2 3
        on right: 1 5
    statement (34)
        on left: 4 5 6 7 8 9
        on right: 2 33 34 35
    relexpression (35)
        on left: 10 11 12 13
        on right: 30 31 32 33 34
    expression (36)
        on left: 14 15 16 17 18
        on right: 10 11 12 13
    term (37)
        on left: 19 20 21 22
        on right: 14 15 16 17 18
    factor (38)
        on left: 23 24 25 26 27 28 29 30
        on right: 19 20 21 22 26 27 28
    assigment (39)
        on left: 31
        on right: 4
    print (40)
        on left: 32
        on right: 6
    if (41)
        on left: 33
        on right: 7
    while (42)
        on left: 34
        on right: 8
    else (43)
        on left: 35 36
        on right: 33
    var_type (44)
        on left: 37 38
        on right: 9 31


State 0

    0 $accept: • program $end

    OBRA  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    2 block: OBRA • statement CBRA
    3      | OBRA • CBRA

    OBRA   shift, and go to state 1
    CBRA   shift, and go to state 4
    PRNT   shift, and go to state 5
    WHILE  shift, and go to state 6
    IF     shift, and go to state 7
    TYPE   shift, and go to state 8
    COMMA  shift, and go to state 9

    block      go to state 10
    statement  go to state 11
    assigment  go to state 12
    print      go to state 13
    if         go to state 14
    while      go to state 15
    var_type   go to state 16


State 2

    0 $accept: program • $end

    $end  shift, and go to state 17


State 3

    1 program: block •

    $default  reduce using rule 1 (program)


State 4

    3 block: OBRA CBRA •

    $default  reduce using rule 3 (block)


State 5

   32 print: PRNT • OPAR relexpression CPAR

    OPAR  shift, and go to state 18


State 6

   34 while: WHILE • OPAR relexpression CPAR statement

    OPAR  shift, and go to state 19


State 7

   33 if: IF • OPAR relexpression CPAR statement else

    OPAR  shift, and go to state 20


State 8

   37 var_type: TYPE • IDENT

    IDENT  shift, and go to state 21


State 9

   38 var_type: COMMA • IDENT

    IDENT  shift, and go to state 22


State 10

    5 statement: block •

    $default  reduce using rule 5 (statement)


State 11

    2 block: OBRA statement • CBRA

    CBRA  shift, and go to state 23


State 12

    4 statement: assigment •

    $default  reduce using rule 4 (statement)


State 13

    6 statement: print •

    $default  reduce using rule 6 (statement)


State 14

    7 statement: if •

    $default  reduce using rule 7 (statement)


State 15

    8 statement: while •

    $default  reduce using rule 8 (statement)


State 16

    9 statement: var_type • SMCL
   31 assigment: var_type • IDENT EQUL relexpression

    SMCL   shift, and go to state 24
    IDENT  shift, and go to state 25


State 17

    0 $accept: program $end •

    $default  accept


State 18

   32 print: PRNT OPAR • relexpression CPAR

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    relexpression  go to state 34
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 19

   34 while: WHILE OPAR • relexpression CPAR statement

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    relexpression  go to state 38
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 20

   33 if: IF OPAR • relexpression CPAR statement else

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    relexpression  go to state 39
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 21

   37 var_type: TYPE IDENT •

    $default  reduce using rule 37 (var_type)


State 22

   38 var_type: COMMA IDENT •

    $default  reduce using rule 38 (var_type)


State 23

    2 block: OBRA statement CBRA •

    $default  reduce using rule 2 (block)


State 24

    9 statement: var_type SMCL •

    $default  reduce using rule 9 (statement)


State 25

   31 assigment: var_type IDENT • EQUL relexpression

    EQUL  shift, and go to state 40


State 26

   26 factor: PLUS • factor

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    factor  go to state 41


State 27

   27 factor: MINUS • factor

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    factor  go to state 42


State 28

   28 factor: NOT • factor

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    factor  go to state 43


State 29

   30 factor: OPAR • relexpression CPAR

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    relexpression  go to state 44
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 30

   29 factor: SCAN • OPAR CPAR

    OPAR  shift, and go to state 45


State 31

   23 factor: INT •

    $default  reduce using rule 23 (factor)


State 32

   24 factor: STR •

    $default  reduce using rule 24 (factor)


State 33

   25 factor: IDENT •

    $default  reduce using rule 25 (factor)


State 34

   32 print: PRNT OPAR relexpression • CPAR

    CPAR  shift, and go to state 46


State 35

   10 relexpression: expression • EQEQ
   11              | expression • LESS
   12              | expression • GRTR
   13              | expression •

    EQEQ  shift, and go to state 47
    LESS  shift, and go to state 48
    GRTR  shift, and go to state 49

    $default  reduce using rule 13 (relexpression)


State 36

   14 expression: term • PLUS
   15           | term • MINUS
   16           | term • OR
   17           | term • DOT
   18           | term •

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    OR     shift, and go to state 52
    DOT    shift, and go to state 53

    $default  reduce using rule 18 (expression)


State 37

   19 term: factor •
   20     | factor • MULT
   21     | factor • DIV
   22     | factor • AND

    MULT  shift, and go to state 54
    DIV   shift, and go to state 55
    AND   shift, and go to state 56

    $default  reduce using rule 19 (term)


State 38

   34 while: WHILE OPAR relexpression • CPAR statement

    CPAR  shift, and go to state 57


State 39

   33 if: IF OPAR relexpression • CPAR statement else

    CPAR  shift, and go to state 58


State 40

   31 assigment: var_type IDENT EQUL • relexpression

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    NOT    shift, and go to state 28
    OPAR   shift, and go to state 29
    SCAN   shift, and go to state 30
    INT    shift, and go to state 31
    STR    shift, and go to state 32
    IDENT  shift, and go to state 33

    relexpression  go to state 59
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 41

   26 factor: PLUS factor •

    $default  reduce using rule 26 (factor)


State 42

   27 factor: MINUS factor •

    $default  reduce using rule 27 (factor)


State 43

   28 factor: NOT factor •

    $default  reduce using rule 28 (factor)


State 44

   30 factor: OPAR relexpression • CPAR

    CPAR  shift, and go to state 60


State 45

   29 factor: SCAN OPAR • CPAR

    CPAR  shift, and go to state 61


State 46

   32 print: PRNT OPAR relexpression CPAR •

    $default  reduce using rule 32 (print)


State 47

   10 relexpression: expression EQEQ •

    $default  reduce using rule 10 (relexpression)


State 48

   11 relexpression: expression LESS •

    $default  reduce using rule 11 (relexpression)


State 49

   12 relexpression: expression GRTR •

    $default  reduce using rule 12 (relexpression)


State 50

   14 expression: term PLUS •

    $default  reduce using rule 14 (expression)


State 51

   15 expression: term MINUS •

    $default  reduce using rule 15 (expression)


State 52

   16 expression: term OR •

    $default  reduce using rule 16 (expression)


State 53

   17 expression: term DOT •

    $default  reduce using rule 17 (expression)


State 54

   20 term: factor MULT •

    $default  reduce using rule 20 (term)


State 55

   21 term: factor DIV •

    $default  reduce using rule 21 (term)


State 56

   22 term: factor AND •

    $default  reduce using rule 22 (term)


State 57

   34 while: WHILE OPAR relexpression CPAR • statement

    OBRA   shift, and go to state 1
    PRNT   shift, and go to state 5
    WHILE  shift, and go to state 6
    IF     shift, and go to state 7
    TYPE   shift, and go to state 8
    COMMA  shift, and go to state 9

    block      go to state 10
    statement  go to state 62
    assigment  go to state 12
    print      go to state 13
    if         go to state 14
    while      go to state 15
    var_type   go to state 16


State 58

   33 if: IF OPAR relexpression CPAR • statement else

    OBRA   shift, and go to state 1
    PRNT   shift, and go to state 5
    WHILE  shift, and go to state 6
    IF     shift, and go to state 7
    TYPE   shift, and go to state 8
    COMMA  shift, and go to state 9

    block      go to state 10
    statement  go to state 63
    assigment  go to state 12
    print      go to state 13
    if         go to state 14
    while      go to state 15
    var_type   go to state 16


State 59

   31 assigment: var_type IDENT EQUL relexpression •

    $default  reduce using rule 31 (assigment)


State 60

   30 factor: OPAR relexpression CPAR •

    $default  reduce using rule 30 (factor)


State 61

   29 factor: SCAN OPAR CPAR •

    $default  reduce using rule 29 (factor)


State 62

   34 while: WHILE OPAR relexpression CPAR statement •

    $default  reduce using rule 34 (while)


State 63

   33 if: IF OPAR relexpression CPAR statement • else

    ELSE  shift, and go to state 64

    ELSE      [reduce using rule 36 (else)]
    $default  reduce using rule 36 (else)

    else  go to state 65


State 64

   35 else: ELSE • statement

    OBRA   shift, and go to state 1
    PRNT   shift, and go to state 5
    WHILE  shift, and go to state 6
    IF     shift, and go to state 7
    TYPE   shift, and go to state 8
    COMMA  shift, and go to state 9

    block      go to state 10
    statement  go to state 66
    assigment  go to state 12
    print      go to state 13
    if         go to state 14
    while      go to state 15
    var_type   go to state 16


State 65

   33 if: IF OPAR relexpression CPAR statement else •

    $default  reduce using rule 33 (if)


State 66

   35 else: ELSE statement •

    $default  reduce using rule 35 (else)
